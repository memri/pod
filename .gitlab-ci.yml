# WARNING:
# Project currently uses GitLab shell runner instead of proper containers.
#
# Merge requests to improve this are welcomed!

stages:
  - test
  - docs
  - build_push_DO
  - build_push_Gitlab

tags:
  - docker

test:
  stage: test
  image: rust:slim
  script:
    - cargo fmt --all -- --check
    - touch src/main.rs && cargo clippy --all-targets --all-features -- -D warnings
    - if grep --recursive '::{' src/; then exit -1; fi
    - cargo audit
    - cargo test
    - ./tools/test_curl.sh
    
build_push_DO:
  stage: build_push_DO
  script:
    - echo -n $Access_Token | docker login -u $Access_Token --password-stdin $Docker_Repo
    - >
      docker build
      --pull
      --build-arg use_kubernetes=true
      --tag $Docker_Repo/polis/pod-dev:$CI_COMMIT_REF_SLUG
      .
    - docker push $Docker_Repo/polis/pod-dev:$CI_COMMIT_REF_SLUG

build_push_Gitlab:
  stage: build_push_Gitlab
  script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login --username $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - >
      docker build
      --pull
      --build-arg use_kubernetes=false
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

pages:
  stage: docs
  script:
    - rm -rf target/doc 2>/dev/null || true
    - cargo doc --no-deps
    - mkdir -p public/rustdoc
    - mv -T target/doc public/rustdoc
    - echo '<a href="./rustdoc/pod">rustdoc</a>' > public/index.html
  artifacts:
    paths:
      - public
  only:
    - dev
